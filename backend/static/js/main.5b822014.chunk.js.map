{"version":3,"sources":["store/actions/actionType.js","store/reducers/reducer.js","store/reducers/index.js","Authentication/Home.js","store/actions/action.js","Authentication/Login.js","Authentication/Signup.js","Authentication/Activate.js","Authentication/PasswordReset.js","Authentication/PasswordResetConfirm.js","Authentication/Navbar.js","hoc/Layout.js","Component/Sidepanel.js","Component/Profile.js","Component/Chat.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTEHNTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOG_OUT","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","reducer","state","action","type","payload","actionType","setItem","removeItem","combineReducers","clickhandler","e","isTrusted","Home","className","class","to","role","onClick","load_user","dispatch","a","console","log","config","headers","axios","get","process","res","data","connect","login","email","password","body","JSON","stringify","post","actions","props","useState","formData","setFormData","onChange","target","name","value","onSubmit","preventDefault","placeholder","required","signup","re_password","accountCreated","setAccountCreated","objects","uid","match","params","token","verify","verified","setVerified","style","marginTop","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","useEffect","children","SidePanel","Profile","Chat","App","exact","path","component","Login","Signup","PasswordReset","PasswordResetConfirm","Activate","middelware","thunk","store","createStore","composeWithDevTools","applyMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b822014.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTEHNTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS'\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL'","import * as actionType from '../actions/actionType'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n}\r\n\r\nfunction reducer(state = initialState, action)  {\r\n    const {type, payload } = action\r\n\r\n    switch(type) {\r\n        case actionType.LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n\r\n        \r\n        case actionType.LOGIN_FAIL:\r\n        case actionType.SIGNUP_FAIL:\r\n        case actionType.LOG_OUT:\r\n            if (localStorage.getItem('access')) {\r\n            localStorage.removeItem('access')\r\n            }\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null     \r\n            }\r\n        \r\n            \r\n        case actionType.LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload.user\r\n            }\r\n        \r\n        case actionType.LOAD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case actionType.AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        \r\n        case actionType.AUTEHNTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n\r\n        case actionType.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case actionType.PASSWORD_RESET_SUCCESS:\r\n        case actionType.PASSWORD_RESET_FAIL:\r\n        case actionType.PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case actionType.PASSWORD_RESET_CONFIRM_FAIL:\r\n        case actionType.ACTIVATION_FAIL:\r\n        case actionType.ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport default combineReducers({\r\n    reducer\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction clickhandler(e) {\r\n    if (e.isTrusted) {\r\n        \r\n    }\r\n} \r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div class=\"jumbotron mt-5\">\r\n        <h1 class=\"display-4\">Welcome</h1>\r\n        <p class=\"lead\">This is authentication system.</p>\r\n        <hr class=\"my-4\"/>\r\n        <p>Click the login button</p>\r\n        <Link class=\"btn btn-primary btn-lg\" to='/login' role=\"button\" onClick={clickhandler}>Login</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home","import * as actionType from './actionType'\r\nimport axios from 'axios'\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        console.log('load_user::', `JWT ${localStorage.getItem('access')}`)\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            // use shift and @ instead of shift and 7\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\r\n            dispatch({\r\n                type: actionType.LOAD_USER_SUCCESS,\r\n                payload: res.data})\r\n        } catch (err) {\r\n        dispatch({\r\n                type: actionType.LOAD_USER_FAIL})\r\n        }\r\n    } else {\r\n        console.log('no access')\r\n        dispatch({\r\n            type: actionType.LOAD_USER_FAIL})\r\n    }\r\n}\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\r\n        dispatch({\r\n            type: actionType.LOGIN_SUCCESS,\r\n            payload: res.data})\r\n\r\n        dispatch(load_user())\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.LOGIN_FAIL})\r\n    }\r\n}\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({ token: localStorage.getItem('access')})\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: actionType.AUTHENTICATED_SUCCESS\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n            \r\n        } catch(err) {\r\n            dispatch({\r\n                type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n        \r\n    } else {\r\n        dispatch({\r\n            type: actionType.AUTEHNTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: actionType.LOG_OUT\r\n    })\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n        console.log('PASSWORD_RESET')\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_FAIL})\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password})\r\n    console.log('PASSWORD_RESET_CONFIRM')\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_SUCCESS})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_FAIL})\r\n    }\r\n}\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password, re_password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\r\n        dispatch({\r\n            type: actionType.SIGNUP_SUCCESS,\r\n            payload: res.data})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.SIGNUP_FAIL})\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n        dispatch({\r\n            type: actionType.ACTIVATION_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.ACTIVATION_FAIL})\r\n    }\r\n}","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Login = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.login(email, password)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/:chatID/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign in</h1>\r\n        <p1>Sign into your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Login</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Don't have an account? <Link to='/signup'>Sign up</Link>\r\n        </p>\r\n        <p className='mt-3'>\r\n            Forget your password? <Link to='/reset_password'>Reset Password</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login : (email, password) => dispatch(actions.login(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Login)","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Signup = (props) => {\r\n    const [accountCreated, setAccountCreated] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email:'',\r\n        password:'',\r\n        re_password: ''\r\n    })\r\n\r\n    const {name, email, password, re_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(name, email, password, re_password)\r\n        props.signup(name, email, password, re_password)\r\n        setAccountCreated(true)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign up</h1>\r\n        <p1>Create your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='name'\r\n                placeholder='name'\r\n                name='name'\r\n                value={name}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email*'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password*'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm Password*'\r\n                name='re_password'\r\n                value={re_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Sign up</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Already have an account? <Link to='/login'>Log in</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup : (name, email, password, re_password) => dispatch(actions.signup(name, email, password, re_password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Signup)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false)\r\n    const verify_account = e => {\r\n        props.verify(props.uid, props.token)\r\n        setVerified(true)\r\n    }\r\n    if (verified) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <div className='d-flex flex-column justify-content-center align-items-center'\r\n        style={{ marginTop: '200px'}}>\r\n            <h1>Verify your account:</h1>\r\n            <button onClick={verify_account}\r\n            style={{marginTop: '50px'}}\r\n            type='button'\r\n            className='btn btn-primary'>Verify</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = (state, objects) => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated,\r\n    uid: objects.match.params.uid,\r\n    token: objects.match.params.token\r\n\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verify : (uid, token) => dispatch(actions.verify(uid, token))\r\n    }\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Activate)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst PasswordReset = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    })\r\n    const {email} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password: (email) => dispatch(actions.reset_password(email),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(PasswordReset)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst PasswordResetConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    })\r\n    console.log('token::', props.token)\r\n    const {new_password, re_new_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const uid = props.uid\r\n        const token = props.token\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='New Pasword'\r\n                name='new_password'\r\n                value={new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm New Password'\r\n                name='re_new_password'\r\n                value={re_new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>PasswordResetConfirm</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\n// if resetpasswordconfirm send token and uid to this component, but you can't put two variables on PasswordResetConfirm.\r\n// so you need to use mapStateProps to use them\r\nconst mapstateToProps = (state, objects) => {\r\n    return {\r\n        uid: objects.match.params.uid,\r\n        token: objects.match.params.token,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password_confirm: (uid, token, new_password, re_new_password) => dispatch(actions.reset_password_confirm(uid, token, new_password, re_new_password),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(PasswordResetConfirm)","import { Link } from 'react-router-dom'\r\nimport React, {Fragment} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\nconst Navbar = (props) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/login'>Login</Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/signup'>Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n    const authLinks = () => (\r\n        <li class=\"nav-item active\">\r\n        <Link class=\"nav-link\" to='/' onClick={props.logout}>Logout<span class=\"sr-only\">(current)</span></Link>\r\n    </li>\r\n    )\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link class=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item active\">\r\n            <Link class=\"nav-link\" to='/'>Home<span class=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            {props.isAuthenticated ? authLinks(): guestLinks()}  \r\n            </ul>\r\n        </div>\r\n        </nav>\r\n        )\r\n    }\r\n\r\n    const mapstateToProps = state => {\r\n        return {\r\n        isAuthenticated: state.reducer.isAuthenticated\r\n    }}\r\n\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            logout: () => dispatch(actions.logout()),\r\n        }\r\n    }\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Navbar)","import React, {useEffect }from 'react'\r\nimport Navbar from '../Authentication/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n// const Layout = (props) => {\r\n//     useEffect(() => {\r\n//         props.checkAuthenticated()\r\n//         props.load_user()\r\n//     }, [])\r\n//     return (\r\n//     <div>\r\n//         <Navbar/>\r\n//         {props.children}\r\n//     </div>\r\n// )\r\n// }\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         checkAuthenticated: () => dispatch(actions.checkAuthenticated()),\r\n//         load_user: () => dispatch(actions.load_user())\r\n//     }\r\n// }\r\n// export default connect(null, mapDispatchToProps)(Layout)\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated()\r\n        props.load_user()\r\n    }, [])\r\n    return (\r\n    <div>\r\n        <Navbar/>\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthenticated: () => dispatch(actions.checkAuthenticated()),\r\n        load_user: () => dispatch(actions.load_user())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Layout)","// import React from 'react';\r\n// import { LoadingOutlined } from '@ant-design/icons'\r\n// import { connect } from 'react-redux';\r\n// import * as actions from '../store/actions/action';\r\n// import '../index.css'\r\n\r\n\r\n\r\n// class Sidepanel extends React.Component {\r\n\r\n//     state = { \r\n//         loginForm: true,\r\n//     }\r\n\r\n//     changeForm = (e) => {\r\n//         if (e.isTrusted) {\r\n//             this.setState({ loginForm: !this.state.loginForm });\r\n//         }\r\n//     }\r\n\r\n//     authenticate = (e) => {\r\n//         e.preventDefault();\r\n//         if (this.state.loginForm) {\r\n//             this.props.login(\r\n//                 e.target.username.value, \r\n//                 e.target.password.value\r\n//             );\r\n//         } else {\r\n//             this.props.signup(\r\n//                 e.target.username.value, \r\n//                 e.target.email.value, \r\n//                 e.target.password.value, \r\n//                 e.target.password2.value\r\n//             );\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div id=\"sidepanel\">\r\n//             <div id=\"profile\">\r\n//                 <div className=\"wrap\">\r\n//                 <img id=\"profile-img\" src=\"http://emilcarlsson.se/assets/mikeross.png\" className=\"online\" alt=\"\" />\r\n//                 <p>Mike Ross</p>\r\n//                 <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\r\n//                 <div id=\"status-options\">\r\n//                     <ul>\r\n//                     <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span> <p>Online</p></li>\r\n//                     <li id=\"status-away\"><span className=\"status-circle\"></span> <p>Away</p></li>\r\n//                     <li id=\"status-busy\"><span className=\"status-circle\"></span> <p>Busy</p></li>\r\n//                     <li id=\"status-offline\"><span className=\"status-circle\"></span> <p>Offline</p></li>\r\n//                     </ul>\r\n//                 </div>\r\n//                 <div id=\"expanded\">\r\n//                     {\r\n//                         this.props.loading ?\r\n\r\n//                         <LoadingOutlined />:\r\n\r\n//                         this.props.isAuthenticated ? \r\n                    \r\n//                         <button onClick={() => this.props.logout()} className=\"authBtn\"><span>Logout</span></button>\r\n                        \r\n//                         :\r\n                        \r\n//                         <div>\r\n//                             <form method=\"POST\" onSubmit={this.authenticate}>\r\n                                \r\n//                                 {\r\n//                                     this.state.loginForm ?\r\n\r\n//                                     <div>\r\n//                                         <input name=\"username\" type=\"text\" placeholder=\"username\" />\r\n//                                         <input name=\"password\" type=\"password\" placeholder=\"password\" />\r\n//                                     </div>\r\n\r\n//                                     :\r\n\r\n//                                     <div>\r\n//                                         <input name=\"username\" type=\"text\" placeholder=\"username\" />\r\n//                                         <input name=\"email\" type=\"email\" placeholder=\"email\" />\r\n//                                         <input name=\"password\" type=\"password\" placeholder=\"password\" />\r\n//                                         <input name=\"password2\" type=\"password\" placeholder=\"password confirm\" />\r\n//                                     </div>\r\n//                                 }\r\n                                \r\n//                                 <button type=\"submit\">Authenticate</button>\r\n\r\n//                             </form>\r\n\r\n//                             <button onClick={this.changeForm}>Switch</button>\r\n//                         </div>\r\n//                     }\r\n//                 </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div id=\"search\">\r\n//                 <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\r\n//                 <input type=\"text\" placeholder=\"Search contacts...\" />\r\n//             </div>\r\n//             <div id=\"contacts\">\r\n//                 <ul>\r\n//                 <li className=\"contact\">\r\n//                     <div className=\"wrap\">\r\n//                     <span className=\"contact-status online\"></span>\r\n//                     <img src=\"http://emilcarlsson.se/assets/louislitt.png\" alt=\"\" />\r\n//                     <div className=\"meta\">\r\n//                         <p className=\"name\">Louis Litt</p>\r\n//                         <p className=\"preview\">You just got LITT up, Mike.</p>\r\n//                     </div>\r\n//                     </div>\r\n//                 </li>\r\n//                 <li className=\"contact active\">\r\n//                     <div className=\"wrap\">\r\n//                     <span className=\"contact-status busy\"></span>\r\n//                     <img src=\"http://emilcarlsson.se/assets/harveyspecter.png\" alt=\"\" />\r\n//                     <div className=\"meta\">\r\n//                         <p className=\"name\">Harvey Specter</p>\r\n//                         <p className=\"preview\">Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and htmlForty six other things.</p>\r\n//                     </div>\r\n//                     </div>\r\n//                 </li>\r\n//                 </ul>\r\n//             </div>\r\n//             <div id=\"bottom-bar\">\r\n//                 <button id=\"addcontact\"><i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i> <span>Add contact</span></button>\r\n//                 <button id=\"settings\"><i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i> <span>Settings</span></button>\r\n//             </div>\r\n//             </div>\r\n//         );\r\n//     };\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         isAuthenticated: state.token !== null,\r\n//         loading: state.loading\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         login: (userName, password) => dispatch(actions.authLogin(userName, password)),\r\n//         logout: () => dispatch(actions.logout()),\r\n//         signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Sidepanel);\r\n\r\nconst SidePanel = () => {\r\n    return (\r\n        <div>SidePanel</div>\r\n    )\r\n}\r\n\r\nexport default SidePanel","// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import Hoc from '../hoc/Layout';\r\n// import '../index.css'\r\n\r\n// class Profile extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <div className=\"contact-profile\">\r\n//             {\r\n//                 this.props.username !== null ?\r\n\r\n//                 <Hoc>\r\n//                     <img src=\"http://emilcarlsson.se/assets/harveyspecter.png\" alt=\"\" />\r\n//                     <p>{this.props.username}</p>\r\n//                     <div className=\"social-media\">\r\n//                     <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n//                     <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n//                     <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n//                     </div>\r\n//                 </Hoc>\r\n                \r\n//                 :\r\n\r\n//                 null\r\n//             }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         username: state.username\r\n//     }\r\n// }\r\n    \r\n// export default connect(mapStateToProps)(Profile);\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport SidePanel from './Sidepanel'\r\nimport Profile from './Profile'\r\n// import WebSocketInstance from '../WebSocket.js'\r\n// import '../index.css'\r\n// class Chat extends React.Component {\r\n\r\n// \tconstructor(props) {\r\n// \t\tsuper(props)\r\n// \t\tthis.state = {\r\n// \t\t\tmessages: [],\r\n// \t\t\tmessage: ''\r\n\r\n// \t\t}\r\n// \t\tthis.waitForSocketConnection(() => {\r\n// \t\t\tWebSocketInstance.addCallbacks(\r\n// \t\t\t\tthis.setMessage.bind(this),\r\n// \t\t\t\tthis.addMessage.bind(this))\r\n// \t\t\t\t//this.props.currentUser => daisuke\r\n// \t\t\tWebSocketInstance.fetchMessages('daisuke')\r\n// \t\t})\r\n// \t}\r\n// \twaitForSocketConnection(callback) {\r\n// \t\tconst component = this // this is Chat\r\n//         // const socket = this.socketRef\r\n//         //const recursion = .waitForSocketConnection\r\n//         setTimeout(\r\n//             function() {\r\n//                 if (WebSocketInstance.state() === 1) {\r\n//                     console.log('connection is secure')\r\n//                     callback()\r\n//                     return;\r\n//                 } else {\r\n//                     console.log('waiting for connection ....')\r\n//                     component.waitForSocketConnection(callback)\r\n//                 } \r\n//             }, 100);\r\n// \t}\r\n\r\n// \tsetMessage(messages) {\r\n// \t\t//messages.reverse() => messages\r\n// \t\tthis.setState({messages: messages.reverse()})\r\n// \t}\r\n\t\r\n// \taddMessage(message) {\r\n// \t\t// ... means *args\r\n// \t\tthis.setState({messages: [...this.state.messages, message[0]]})\r\n// \t}\r\n\r\n// \trenderMessages = (messages) => {\r\n// \t\tconst currentUser = 'kikuchi'\r\n// \t\treturn messages.map(message => (\r\n// \t\t\t<li\r\n// \t\t\tkey={message.id}\r\n// \t\t\tclassName={message.author === currentUser ? 'sent': 'replies'}>\r\n// \t\t\t<img src='http://emilcarlsson.se/assets/mikeross.png'/>\r\n// \t\t\t<p>\r\n// \t\t\t\t{message.content}\r\n// \t\t\t\t<br/>\r\n// \t\t\t\t<small>\r\n// \t\t\t\t\t{message.timestamp.substring(0,16)}\r\n// \t\t\t\t\t{/*{Math.round(new Date().getTime() - new Date(message.timestamp).getTime()/60000)} minutes ago*/}\r\n// \t\t\t\t</small>\r\n// \t\t\t</p>\r\n// \t\t\t</li>\r\n// \t\t))\r\n// \t}\r\n\t\r\n// \tmessageChangeHandler = e => {\r\n// \t\tthis.setState({message: e.target.value})\r\n// \t}\r\n\r\n// \tsendMessageHandler = e =>{\r\n// \t\te.preventDefault();\r\n// \t\tconst messageObject = {\r\n// \t\t\tfrom: 'kikuchi',\r\n// \t\t\tcontent: this.state.message\r\n// \t\t}\r\n// \t\tif (messageObject.content) {\r\n// \t\t\tconsole.log(messageObject.content)\r\n// \t\t\tWebSocketInstance.newChatMessage(messageObject);\r\n// \t\t    this.setState({\r\n// \t\t\t     message: ''\r\n// \t\t})\r\n// \t}}\r\n\r\n//     render() {\r\n// \t\tconst messages = this.state.messages;\r\n//         return (\r\n//     <div id=\"frame\">\r\n// \t\t<div className=\"messages\">\r\n// \t\t\t<ul id='chat-log'>\r\n// \t\t\t\t{messages && this.renderMessages(messages)}\r\n// \t\t\t</ul>\r\n// \t\t</div>\r\n// \t\t<div className=\"message-input\">\r\n// \t\t\t<form onSubmit={this.sendMessageHandler}>\r\n// \t\t\t<div className=\"wrap\">\r\n// \t\t\t<input onChange={this.messageChangeHandler}\r\n// \t\t\tvalue={this.state.message}id=\"chat-message-input\" type=\"text\" placeholder=\"Write your message...\" />\r\n// \t\t\t<i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\r\n// \t\t\t<button id=\"chat-message-submit\" className=\"submit\">\r\n// \t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n// \t\t\t</button>\r\n// \t\t\t</div>\r\n// \t\t\t</form>\r\n// \t\t</div>\r\n// \t</div>\r\n//         )\r\n\r\n//   }\r\n//   }\r\n  \r\n//   export default Chat;\r\n\r\nconst Chat = () => {\r\n    return (\r\n        <div>\r\n\t\t\t<SidePanel/>\r\n\t\t\t<Profile/>\r\n\t\t\tChat\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Chat","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './Authentication/Home'\nimport Login from './Authentication/Login'\nimport Signup from './Authentication/Signup'\nimport Activate from './Authentication/Activate'\nimport PasswordReset from './Authentication/PasswordReset'\nimport PasswordResetConfirm from './Authentication/PasswordResetConfirm'\nimport Layout from './hoc/Layout'\nimport Chat from './Component/Chat'\nconst App = () => {\n\n    // componentDidMount() {\n    //     this.props.onTryAutoSignup();\n    // }\n\n    // componentDidMount() {\n    //   WebSocketInstance.connect()\n    // }\n\n        return(\n            <Router>\n            <Layout>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/signup' component={Signup} />\n                <Route exact path='/reset_password' component={PasswordReset} />\n                <Route exact path='/password/reset/confirm/:uid/:token' component={PasswordResetConfirm} />\n                <Route exact path='/activate/:uid/:token' component={Activate} />\n                <Route exact path=\"/:chatID/\" component={Chat} />\n              </Switch>\n            </Layout>\n          </Router>\n        );\n}\n  \n\n{/* <Router>\n<div id=\"frame\">\n    <Sidepanel />\n    <div className=\"content\">\n        <Profile />\n        <BaseRouter />\n    </div>\n</div>\n</Router> */}\n\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onTryAutoSignup: () => dispatch(actions.authCheckState())\n//     }\n// }\n\n//connect(null, mapDispatchToProps)(App)\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport reducer from './store/reducers/index';\nimport App from './App';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nconst initialState = {}\n\nconst middelware = [thunk]\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middelware))\n)\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById(\"app\"));"],"sourceRoot":""}