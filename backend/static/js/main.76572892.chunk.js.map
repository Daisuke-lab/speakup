{"version":3,"sources":["store/actions/actionType.js","store/reducers/reducer.js","store/reducers/index.js","store/actions/action.js","Authentication/Home.js","Authentication/Login.js","Authentication/Signup.js","Authentication/Activate.js","Authentication/PasswordReset.js","Authentication/PasswordResetConfirm.js","Authentication/Navbar.js","hoc/Layout.js","Component/Sidepanel.js","Component/Profile.js","WebSocket.js","Component/Chat.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTEHNTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOG_OUT","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","reducer","state","action","type","payload","actionType","setItem","removeItem","combineReducers","load_user","dispatch","a","console","log","config","headers","axios","get","process","res","data","checkAuthenticated","body","JSON","stringify","token","post","clickhandler","e","isTrusted","Home","className","class","to","role","onClick","connect","login","email","password","actions","props","useState","formData","setFormData","onChange","target","name","value","onSubmit","preventDefault","placeholder","required","signup","re_password","accountCreated","setAccountCreated","objects","uid","match","params","verify","verified","setVerified","style","marginTop","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","useEffect","children","SidePanel","loginForm","src","alt","aria-hidden","this","loading","LoadingOutlined","method","authenticate","htmlFor","React","Component","Profile","username","WebSocketService","callbacks","socketRef","instace","instance","WebSocket","onopen","socketNewMessage","command","onmessage","onclose","onerror","message","parseData","parse","Object","keys","length","messages","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","renderMessages","map","author","timestamp","substring","messageChangeHandler","setState","sendMessageHandler","messageObject","newChatMessage","waitForSocketConnection","addCallbacks","setMessage","bind","addMessage","fetchMessages","callback","component","setTimeout","reverse","exact","path","Login","Signup","PasswordReset","PasswordResetConfirm","Activate","middelware","thunk","store","createStore","composeWithDevTools","applyMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76572892.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTEHNTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS'\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL'","import * as actionType from '../actions/actionType'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n}\r\n\r\nfunction reducer(state = initialState, action)  {\r\n    const {type, payload } = action\r\n\r\n    switch(type) {\r\n        case actionType.LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n\r\n        \r\n        case actionType.LOGIN_FAIL:\r\n        case actionType.SIGNUP_FAIL:\r\n        case actionType.LOG_OUT:\r\n            if (localStorage.getItem('access')) {\r\n            localStorage.removeItem('access')\r\n            }\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null     \r\n            }\r\n        \r\n            \r\n        case actionType.LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload.user\r\n            }\r\n        \r\n        case actionType.LOAD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case actionType.AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        \r\n        case actionType.AUTEHNTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n\r\n        case actionType.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case actionType.PASSWORD_RESET_SUCCESS:\r\n        case actionType.PASSWORD_RESET_FAIL:\r\n        case actionType.PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case actionType.PASSWORD_RESET_CONFIRM_FAIL:\r\n        case actionType.ACTIVATION_FAIL:\r\n        case actionType.ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport reducer from './reducer'\r\n\r\nexport default combineReducers({\r\n    reducer\r\n})","import * as actionType from './actionType'\r\nimport axios from 'axios'\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        console.log('load_user::', `JWT ${localStorage.getItem('access')}`)\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            // use shift and @ instead of shift and 7\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config)\r\n            dispatch({\r\n                type: actionType.LOAD_USER_SUCCESS,\r\n                payload: res.data})\r\n        } catch (err) {\r\n        dispatch({\r\n                type: actionType.LOAD_USER_FAIL})\r\n        }\r\n    } else {\r\n        console.log('no access')\r\n        dispatch({\r\n            type: actionType.LOAD_USER_FAIL})\r\n    }\r\n}\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config)\r\n        dispatch({\r\n            type: actionType.LOGIN_SUCCESS,\r\n            payload: res.data})\r\n\r\n        dispatch(load_user())\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.LOGIN_FAIL})\r\n    }\r\n}\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({ token: localStorage.getItem('access')})\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: actionType.AUTHENTICATED_SUCCESS\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n            \r\n        } catch(err) {\r\n            dispatch({\r\n                type: actionType.AUTEHNTICATED_FAIL\r\n            })\r\n        }\r\n        \r\n    } else {\r\n        dispatch({\r\n            type: actionType.AUTEHNTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: actionType.LOG_OUT\r\n    })\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n        console.log('PASSWORD_RESET')\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_FAIL})\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password})\r\n    console.log('PASSWORD_RESET_CONFIRM')\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_SUCCESS})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.PASSWORD_RESET_CONFIRM_FAIL})\r\n    }\r\n}\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password, re_password})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\r\n        dispatch({\r\n            type: actionType.SIGNUP_SUCCESS,\r\n            payload: res.data})\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.SIGNUP_FAIL})\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({uid, token})\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n        dispatch({\r\n            type: actionType.ACTIVATION_SUCCESS,\r\n            payload: res.data})\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: actionType.ACTIVATION_FAIL})\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction clickhandler(e) {\r\n    if (e.isTrusted) {\r\n        \r\n    }\r\n} \r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div class=\"jumbotron mt-5\">\r\n        <h1 class=\"display-4\">Welcome</h1>\r\n        <p class=\"lead\">This is authentication system.</p>\r\n        <hr class=\"my-4\"/>\r\n        <p>Click the login button</p>\r\n        <Link class=\"btn btn-primary btn-lg\" to='/login' role=\"button\" onClick={clickhandler}>Login</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Home","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Login = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.login(email, password)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/:chatID/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign in</h1>\r\n        <p1>Sign into your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Login</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Don't have an account? <Link to='/signup'>Sign up</Link>\r\n        </p>\r\n        <p className='mt-3'>\r\n            Forget your password? <Link to='/reset_password'>Reset Password</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login : (email, password) => dispatch(actions.login(email, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Login)","import React, { useState }from 'react'\r\nimport {Link, Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Signup = (props) => {\r\n    const [accountCreated, setAccountCreated] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email:'',\r\n        password:'',\r\n        re_password: ''\r\n    })\r\n\r\n    const {name, email, password, re_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(name, email, password, re_password)\r\n        props.signup(name, email, password, re_password)\r\n        setAccountCreated(true)\r\n    }\r\n    if (props.isAuthenticated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Sign up</h1>\r\n        <p1>Create your Account</p1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='name'\r\n                placeholder='name'\r\n                name='name'\r\n                value={name}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email*'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Password*'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm Password*'\r\n                name='re_password'\r\n                value={re_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Sign up</button>\r\n        </form>\r\n        <p className='mt-3'>\r\n            Already have an account? <Link to='/login'>Log in</Link>\r\n        </p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n    isAuthenticated: state.reducer.isAuthenticated\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup : (name, email, password, re_password) => dispatch(actions.signup(name, email, password, re_password))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Signup)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false)\r\n    const verify_account = e => {\r\n        props.verify(props.uid, props.token)\r\n        setVerified(true)\r\n    }\r\n    if (verified) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <div className='d-flex flex-column justify-content-center align-items-center'\r\n        style={{ marginTop: '200px'}}>\r\n            <h1>Verify your account:</h1>\r\n            <button onClick={verify_account}\r\n            style={{marginTop: '50px'}}\r\n            type='button'\r\n            className='btn btn-primary'>Verify</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = (state, objects) => {\r\n    return {\r\n    isAuthenticated: state.reducer.isAuthenticated,\r\n    uid: objects.match.params.uid,\r\n    token: objects.match.params.token\r\n\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verify : (uid, token) => dispatch(actions.verify(uid, token))\r\n    }\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Activate)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst PasswordReset = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    })\r\n    const {email} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        props.reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='email'\r\n                placeholder='Email'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password: (email) => dispatch(actions.reset_password(email),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(PasswordReset)","import React, { useState }from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst PasswordResetConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    })\r\n    console.log('token::', props.token)\r\n    const {new_password, re_new_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const uid = props.uid\r\n        const token = props.token\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n    }\r\n    if (requestSent) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n    <div className='eontainer mt-5'>\r\n        <h1>Request Password Reset</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='New Pasword'\r\n                name='new_password'\r\n                value={new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <input \r\n                className='from-control'\r\n                type='password'\r\n                placeholder='Confirm New Password'\r\n                name='re_new_password'\r\n                value={re_new_password}\r\n                onChange={e => onChange(e)}\r\n                required/>\r\n            </div>\r\n            <button className='btn btn-primary' type='submit'>PasswordResetConfirm</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\n// if resetpasswordconfirm send token and uid to this component, but you can't put two variables on PasswordResetConfirm.\r\n// so you need to use mapStateProps to use them\r\nconst mapstateToProps = (state, objects) => {\r\n    return {\r\n        uid: objects.match.params.uid,\r\n        token: objects.match.params.token,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset_password_confirm: (uid, token, new_password, re_new_password) => dispatch(actions.reset_password_confirm(uid, token, new_password, re_new_password),)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(PasswordResetConfirm)","import { Link } from 'react-router-dom'\r\nimport React, {Fragment} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\nconst Navbar = (props) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/login'>Login</Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to='/signup'>Signup</Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n    const authLinks = () => (\r\n        <li class=\"nav-item active\">\r\n        <Link class=\"nav-link\" to='/' onClick={props.logout}>Logout<span class=\"sr-only\">(current)</span></Link>\r\n    </li>\r\n    )\r\n\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link class=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item active\">\r\n            <Link class=\"nav-link\" to='/'>Home<span class=\"sr-only\">(current)</span></Link>\r\n            </li>\r\n            {props.isAuthenticated ? authLinks(): guestLinks()}  \r\n            </ul>\r\n        </div>\r\n        </nav>\r\n        )\r\n    }\r\n\r\n    const mapstateToProps = state => {\r\n        return {\r\n        isAuthenticated: state.reducer.isAuthenticated\r\n    }}\r\n\r\n    const mapDispatchToProps = dispatch => {\r\n        return {\r\n            logout: () => dispatch(actions.logout()),\r\n        }\r\n    }\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Navbar)","import React, {useEffect }from 'react'\r\nimport Navbar from '../Authentication/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated()\r\n        props.load_user()\r\n    }, [])\r\n    return (\r\n    <div>\r\n        <Navbar/>\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAuthenticated: () => dispatch(actions.checkAuthenticated()),\r\n        load_user: () => dispatch(actions.load_user())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Layout)","import React from 'react';\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/action';\r\nimport '../index.css'\r\nimport '../assets/SidePanel.css'\r\n\r\n\r\n\r\nclass SidePanel extends React.Component {\r\n\r\n    state = { \r\n        loginForm: true,\r\n    }\r\n\r\n    // changeForm = (e) => {\r\n    //     if (e.isTrusted) {\r\n    //         this.setState({ loginForm: !this.state.loginForm });\r\n    //     }\r\n    // }\r\n\r\n    // authenticate = (e) => {\r\n    //     e.preventDefault();\r\n    //     if (this.state.loginForm) {\r\n    //         this.props.login(\r\n    //             e.target.username.value, \r\n    //             e.target.password.value\r\n    //         );\r\n    //     } else {\r\n    //         this.props.signup(\r\n    //             e.target.username.value, \r\n    //             e.target.email.value, \r\n    //             e.target.password.value, \r\n    //             e.target.password2.value\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"sidepanel\">\r\n            <div id=\"profile\">\r\n                <div className=\"wrap\">\r\n                <img id=\"profile-img\" src=\"http://emilcarlsson.se/assets/mikeross.png\" className=\"online\" alt=\"\" />\r\n                <p>Mike Ross</p>\r\n                <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\r\n                <div id=\"status-options\">\r\n                    <ul>\r\n                    <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span> <p>Online</p></li>\r\n                    <li id=\"status-away\"><span className=\"status-circle\"></span> <p>Away</p></li>\r\n                    <li id=\"status-busy\"><span className=\"status-circle\"></span> <p>Busy</p></li>\r\n                    <li id=\"status-offline\"><span className=\"status-circle\"></span> <p>Offline</p></li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"expanded\">\r\n                    {\r\n                        this.props.loading ?\r\n\r\n                        <LoadingOutlined />:\r\n\r\n                        this.props.isAuthenticated ? \r\n                    \r\n                        <button className=\"authBtn\"><span>Logout</span></button>\r\n                        \r\n                        :\r\n                        \r\n                        <div>\r\n                            <form method=\"POST\" onSubmit={this.authenticate}>\r\n                                \r\n                                {\r\n                                    this.state.loginForm ?\r\n\r\n                                    <div>\r\n                                        <input name=\"username\" type=\"text\" placeholder=\"username\" />\r\n                                        <input name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                                    </div>\r\n\r\n                                    :\r\n\r\n                                    <div>\r\n                                        <input name=\"username\" type=\"text\" placeholder=\"username\" />\r\n                                        <input name=\"email\" type=\"email\" placeholder=\"email\" />\r\n                                        <input name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                                        <input name=\"password2\" type=\"password\" placeholder=\"password confirm\" />\r\n                                    </div>\r\n                                }\r\n                                \r\n                                <button type=\"submit\">Authenticate</button>\r\n\r\n                            </form>\r\n\r\n                            <button>Switch</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"search\">\r\n                <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\r\n                <input type=\"text\" placeholder=\"Search contacts...\" />\r\n            </div>\r\n            <div id=\"contacts\">\r\n                <ul>\r\n                <li className=\"contact\">\r\n                    <div className=\"wrap\">\r\n                    <span className=\"contact-status online\"></span>\r\n                    <img src=\"http://emilcarlsson.se/assets/louislitt.png\" alt=\"\" />\r\n                    <div className=\"meta\">\r\n                        <p className=\"name\">Louis Litt</p>\r\n                        <p className=\"preview\">You just got LITT up, Mike.</p>\r\n                    </div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"contact active\">\r\n                    <div className=\"wrap\">\r\n                    <span className=\"contact-status busy\"></span>\r\n                    <img src=\"http://emilcarlsson.se/assets/harveyspecter.png\" alt=\"\" />\r\n                    <div className=\"meta\">\r\n                        <p className=\"name\">Harvey Specter</p>\r\n                        <p className=\"preview\">Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and htmlForty six other things.</p>\r\n                    </div>\r\n                    </div>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n            <div id=\"bottom-bar\">\r\n                <button id=\"addcontact\"><i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i> <span>Add contact</span></button>\r\n                <button id=\"settings\"><i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i> <span>Settings</span></button>\r\n            </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         isAuthenticated: state.token !== null,\r\n//         loading: state.loading\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         login: (userName, password) => dispatch(actions.authLogin(userName, password)),\r\n//         logout: () => dispatch(actions.logout()),\r\n//         signup: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)),\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nexport default SidePanel","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Hoc from '../hoc/Layout';\r\nimport '../index.css'\r\nimport '../assets/Profile.css'\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact-profile\">\r\n            {/* {\r\n                this.props.username !== null ? */}\r\n\r\n                <Hoc>\r\n                    <img src=\"http://emilcarlsson.se/assets/harveyspecter.png\" alt=\"\" />\r\n                    <p>{this.props.username}</p>\r\n                    <div className=\"social-media\">\r\n                    <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n                    <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n                    <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </Hoc>\r\n                \r\n                {/* :\r\n\r\n                null\r\n            } */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         username: state.username\r\n//     }\r\n// }\r\n    \r\nexport default Profile;\r\n\r\n","class WebSocketService {\r\n    // static is method or instance in the class\r\n    static instance = null;\r\n    // put sth later\r\n    callbacks = {};\r\n    static getInstance() {\r\n        if (!WebSocketService.instace) {\r\n            WebSocketService.instance = new WebSocketService()\r\n        }\r\n        return WebSocketService.instance\r\n    }\r\n\r\n    constructor() {\r\n        this.socketRef = null;\r\n\r\n    }\r\n    connect() {\r\n        const path = 'ws://127.0.0.1:8000/ws/chat/test/'\r\n        this.socketRef = new WebSocket(path)\r\n        this.socketRef.onopen = () => {\r\n            console.log('open')\r\n        }\r\n        this.socketNewMessage(JSON.stringify({\r\n            // fetch_messages => messages\r\n            command: 'messages'\r\n        }))\r\n        this.socketRef.onmessage = e => {\r\n            this.socketNewMessage(e.data)\r\n        }\r\n        this.socketRef.onclose = () => {\r\n            console.log('close')\r\n            this.connect()\r\n        }\r\n        this.socketRef.onerror = e => {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    socketNewMessage(data) {\r\n        const parseData = JSON.parse(data)\r\n        const command = parseData.command\r\n        console.log('parseData::',parseData)\r\n        if (Object.keys(this.callbacks).length === 0) {\r\n            return \r\n        }\r\n        if (command === 'messages') {\r\n            // as you can seee addCallback, callbacks[command] is function. so you put Parsedata.message(s) in messagesCallback or newMessageCallback\r\n            this.callbacks[command](parseData.messages)\r\n        }\r\n        if (command === 'new_message') {\r\n            this.callbacks[command](parseData.message)\r\n        }\r\n    }\r\n\r\n    fetchMessages(username) {\r\n        this.sendMessage({command: 'fetch_messages', username: username})\r\n    }\r\n    \r\n    newChatMessage(message) {\r\n        console.log('newChatMessage::', message)\r\n        this.sendMessage({command: 'new_message',from: message.from, message: message.content})\r\n    }\r\n\r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n        this.callbacks['messages'] = messagesCallback;\r\n        this.callbacks['new_message'] = newMessageCallback\r\n    }\r\n\r\n    sendMessage(data) {\r\n        console.log('data in sendMessage',data)\r\n        try {\r\n            this.socketRef.send(JSON.stringify({...data }))\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        } \r\n    }\r\n    state() {\r\n        return this.socketRef.readyState\r\n    }\r\n}\r\n\r\n// WebSocketInstance is new instance \r\nconst WebSocketInstance = WebSocketService.getInstance()\r\n\r\nexport default WebSocketInstance;","import React from 'react'\r\nimport SidePanel from './Sidepanel'\r\nimport Profile from './Profile'\r\nimport WebSocketInstance from '../WebSocket.js'\r\nimport '../index.css'\r\nWebSocketInstance.connect()\r\nclass Chat extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmessages: [],\r\n\t\t\tmessage: ''\r\n\r\n\t\t}\r\n\t\tthis.waitForSocketConnection(() => {\r\n\t\t\tWebSocketInstance.addCallbacks(\r\n\t\t\t\tthis.setMessage.bind(this),\r\n\t\t\t\tthis.addMessage.bind(this))\r\n\t\t\t\t//this.props.currentUser => daisuke\r\n\t\t\tWebSocketInstance.fetchMessages('daisuke')\r\n\t\t})\r\n\t}\r\n\twaitForSocketConnection(callback) {\r\n\t\tconst component = this // this is Chat\r\n        // const socket = this.socketRef\r\n        //const recursion = .waitForSocketConnection\r\n        setTimeout(\r\n            function() {\r\n                if (WebSocketInstance.state() === 1) {\r\n                    console.log('connection is secure')\r\n                    callback()\r\n                    return;\r\n                } else {\r\n                    console.log('waiting for connection ....')\r\n                    component.waitForSocketConnection(callback)\r\n                } \r\n            }, 100);\r\n\t}\r\n\r\n\tsetMessage(messages) {\r\n\t\t//messages.reverse() => messages\r\n\t\tthis.setState({messages: messages.reverse()})\r\n\t}\r\n\t\r\n\taddMessage(message) {\r\n\t\t// ... means *args\r\n\t\tthis.setState({messages: [...this.state.messages, message[0]]})\r\n\t}\r\n\r\n\trenderMessages = (messages) => {\r\n\t\tconst currentUser = 'kikuchi'\r\n\t\treturn messages.map(message => (\r\n\t\t\t<li\r\n\t\t\tkey={message.id}\r\n\t\t\tclassName={message.author === currentUser ? 'sent': 'replies'}>\r\n\t\t\t<img src='http://emilcarlsson.se/assets/mikeross.png'/>\r\n\t\t\t<p>\r\n\t\t\t\t{message.content}\r\n\t\t\t\t<br/>\r\n\t\t\t\t<small>\r\n\t\t\t\t\t{message.timestamp.substring(0,16)}\r\n\t\t\t\t\t{/*{Math.round(new Date().getTime() - new Date(message.timestamp).getTime()/60000)} minutes ago*/}\r\n\t\t\t\t</small>\r\n\t\t\t</p>\r\n\t\t\t</li>\r\n\t\t))\r\n\t}\r\n\t\r\n\tmessageChangeHandler = e => {\r\n\t\tthis.setState({message: e.target.value})\r\n\t}\r\n\r\n\tsendMessageHandler = e =>{\r\n\t\te.preventDefault();\r\n\t\tconst messageObject = {\r\n\t\t\tfrom: 'kikuchi',\r\n\t\t\tcontent: this.state.message\r\n\t\t}\r\n\t\tif (messageObject.content) {\r\n\t\t\tconsole.log(messageObject.content)\r\n\t\t\tWebSocketInstance.newChatMessage(messageObject);\r\n\t\t    this.setState({\r\n\t\t\t     message: ''\r\n\t\t})\r\n\t}}\r\n\r\n    render() {\r\n\t\tconst messages = this.state.messages;\r\n        return (\r\n    <div id=\"frame\">\r\n\t\t<div className='content'>\r\n\t\t<Profile/>\r\n\t\t<SidePanel/>\r\n\t\t<div className=\"messages\">\r\n\t\t\t<ul id='chat-log'>\r\n\t\t\t\t{messages && this.renderMessages(messages)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t<div className=\"message-input\">\r\n\t\t\t<form onSubmit={this.sendMessageHandler}>\r\n\t\t\t<div className=\"wrap\">\r\n\t\t\t<input onChange={this.messageChangeHandler}\r\n\t\t\tvalue={this.state.message}id=\"chat-message-input\" type=\"text\" placeholder=\"Write your message...\" />\r\n\t\t\t<i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\r\n\t\t\t<button id=\"chat-message-submit\" className=\"submit\">\r\n\t\t\t\t<i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n        )\r\n\r\n  }\r\n  }\r\n  \r\n  export default Chat;\r\n\r\n","import React, { useEffect }from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport * as actions from './store/actions/action'\nimport Home from './Authentication/Home'\nimport Login from './Authentication/Login'\nimport Signup from './Authentication/Signup'\nimport Activate from './Authentication/Activate'\nimport PasswordReset from './Authentication/PasswordReset'\nimport PasswordResetConfirm from './Authentication/PasswordResetConfirm'\nimport Layout from './hoc/Layout'\nimport Chat from './Component/Chat'\n\nconst App = (props) => {\n\n    useEffect(() => {\n        props.checkAuthenticated();\n    })\n\n        return(\n            <Router>\n            <Layout>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/signup' component={Signup} />\n                <Route exact path='/reset_password' component={PasswordReset} />\n                <Route exact path='/password/reset/confirm/:uid/:token' component={PasswordResetConfirm} />\n                <Route exact path='/activate/:uid/:token' component={Activate} />\n              </Switch>\n            </Layout>\n            <Switch>\n            <Route exact path=\"/:chatID/\" component={Chat} />\n            </Switch>\n          </Router>\n        );\n}\n  \n\n{/* <Router>\n<div id=\"frame\">\n    <Sidepanel />\n    <div className=\"content\">\n        <Profile />\n        <BaseRouter />\n    </div>\n</div>\n</Router> */}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkAuthenticated: () => dispatch(actions.checkAuthenticated)\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React, { useEffect }from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport reducer from './store/reducers/index';\nimport App from './App';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\n\n\nconst initialState = {}\nconst middelware = [thunk]\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middelware))\n)\n\nconst app = \n    <Provider store={store}>\n        <App />\n    </Provider>\n\n\n\nReactDOM.render(app, document.getElementById(\"app\"));"],"sourceRoot":""}